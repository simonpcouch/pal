% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helper-add-remove.R
\name{helper_add_remove}
\alias{helper_add_remove}
\alias{.helper_add}
\alias{.helper_remove}
\title{Registering helpers}
\usage{
.helper_add(chore, prompt = NULL, interface = c("replace", "prefix", "suffix"))

.helper_remove(chore)
}
\arguments{
\item{chore}{A single string giving a descriptor of the helper's functionality.
Cand only contain letters and numbers.}

\item{prompt}{A single string giving the system prompt. In most cases, this
is a rather long string, containing several newlines.}

\item{interface}{One of \code{"replace"}, \code{"prefix"}, or \code{"suffix"}, describing
how the helper will interact with the selection. For example, the
\link[=cli_helper]{cli helper} \code{"replace"}s the selection, while the
\link[=roxygen_helper]{roxygen helper} \code{"prefixes"} the selected code with documentation.}
}
\value{
\code{NULL}, invisibly. Called for its side effect: a helper for chore \code{chore}
is registered (or unregistered) with the chores package.
}
\description{
Users can create custom helpers using the \code{.helper_add()} function; after passing
the function a chore and prompt, the helper will be available in the
\link[=.init_addin]{chores addin}.

\strong{Most users should not need to interact with these functions.}
\code{\link[=prompt_new]{prompt_new()}} and friends can be used to create prompts for new helpers, and
those helpers can be registered with chores using \code{\link[=directory_load]{directory_load()}} and friends.
The helpers created by those functions will be persistent across sessions.
}
